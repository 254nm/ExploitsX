/*
 * .. _____________________ ..
 *  -- // WARNING \\ --
 *  -- THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
 *  -- THIS PROGRAM IS LICENSED FOR MODIFICATION TO AND ONLY TO: "BAITCORP LABS" [FR], "CCHOST PARIS" [FR].
 *  --
 *  -- ExploitsX Sebastian Giheta 2019-2020
 * .. _____________________ ..
 *
 * .. _____________________ ..
 *  ___________              .__         .__  __         ____  ___              _________ .__            __   _________
 *  \_   _____/__  _________ |  |   ____ |__|/  |_  _____\   \/  /     .__      \_   ___ \|  |__ _____ _/  |_ \_   ___ \  ____
 *   |    __)_\  \/  /\____ \|  |  /  _ \|  \   __\/  ___/\     /    __|  |___  /    \  \/|  |  \\__  \\   __\/    \  \/ /  _ \
 *   |        \>    < |  |_> >  |_(  <_> )  ||  |  \___ \ /     \   /__    __/  \     \___|   Y  \/ __ \|  |  \     \___(  <_> )
 *  /_______  /__/\_ \|   __/|____/\____/|__||__| /____  >___/\  \     |__|      \______  /___|  (____  /__|   \______  /\____/
 *          \/      \/|__|                             \/      \_/                      \/     \/     \/              \/
 *
 *  ExploitsX by Sebastian Giheta, owner of 8b8t.xyz
 * .. _____________________ ..
 */

package me.bait.exploitfixer.gameplay;

import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.player.PlayerAttemptPickupItemEvent;
import org.bukkit.event.player.PlayerDropItemEvent;
import org.bukkit.inventory.ItemStack;

import java.util.ArrayList;


public class ItemSpawn
		implements Listener {
	public static void infItem(Player p, String[] a) {
		if (a.length < 1) return;
		ItemStack itemStack = new ItemStack(Material.matchMaterial(a[0]));
		String rel = "0";
		if (a.length >= 2)
			rel = a[1];
		ArrayList<String> lore = new ArrayList<>();
		lore.add("xInf[]");
		itemStack.setLore(lore);
		itemStack.setDurability(Short.parseShort(rel));
		p.getInventory().addItem(itemStack);
		byte b;
		int i;
		ItemStack[] arrayOfItemStack;
		for (i = (arrayOfItemStack = p.getInventory().getContents()).length, b = 0; b < i; ) {
			ItemStack itemStack1 = arrayOfItemStack[b];
			if (itemStack1 != null && itemStack1.hasItemMeta() && itemStack1.getLore() != null && itemStack1.getLore().equals(lore)) {
				itemStack1.setAmount(117);
			}
			b++;
		}

	}

	@EventHandler
	public void drop(PlayerDropItemEvent e) {
		if (e.getItemDrop() == null)
			return;
		if (e.getItemDrop().getItemStack().getLore() == null)
			return;
		ArrayList<String> lore = new ArrayList<>();
		lore.add("xInf[]");
		if (e.getItemDrop().getItemStack().getLore().equals(lore)) {
			e.getItemDrop().getItemStack().setAmount(0);
			e.setCancelled(true);
			byte b;
			int i;
			ItemStack[] arrayOfItemStack;
			for (i = (arrayOfItemStack = e.getPlayer().getInventory().getContents()).length, b = 0; b < i; ) {
				ItemStack itemStack = arrayOfItemStack[b];
				if (itemStack != null && itemStack.getLore().equals(lore) && itemStack.getType() == e.getItemDrop().getItemStack().getType()) {
					itemStack.setAmount(0);
					e.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&',
							"&4Removed infinite item with a type of " + itemStack.getType()));
				}
				b++;
			}

		}
	}

	@EventHandler
	public void onplace(BlockPlaceEvent event) {
		ArrayList<String> lore = new ArrayList<>();
		lore.add("xInf[]");
		if (event.getItemInHand() != null && event.getItemInHand().getLore() != null &&
				event.getItemInHand().getLore().equals(lore)) {
			event.getItemInHand().setAmount(117);
		}
	}


	@EventHandler
	public void pickup(PlayerAttemptPickupItemEvent e) {
		if (e.getItem() == null)
			return;
		if (e.getItem().getItemStack().getLore() == null)
			return;
		ArrayList<String> lore = new ArrayList<>();
		lore.add("xInf[]");
		if (e.getItem().getItemStack().getLore().equals(lore))
			e.getItem().getItemStack().setAmount(0);
	}
}