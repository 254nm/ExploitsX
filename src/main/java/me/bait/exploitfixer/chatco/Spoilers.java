/*
 * .. _____________________ ..
 *  -- // WARNING \\ --
 *  -- THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
 *  -- THIS PROGRAM IS LICENSED FOR MODIFICATION TO AND ONLY TO: "BAITCORP LABS" [FR], "CCHOST PARIS" [FR].
 *  --
 *  -- ExploitsX Sebastian Giheta 2019-2020
 * .. _____________________ ..
 *
 * .. _____________________ ..
 *  ___________              .__         .__  __         ____  ___              _________ .__            __   _________
 *  \_   _____/__  _________ |  |   ____ |__|/  |_  _____\   \/  /     .__      \_   ___ \|  |__ _____ _/  |_ \_   ___ \  ____
 *   |    __)_\  \/  /\____ \|  |  /  _ \|  \   __\/  ___/\     /    __|  |___  /    \  \/|  |  \\__  \\   __\/    \  \/ /  _ \
 *   |        \>    < |  |_> >  |_(  <_> )  ||  |  \___ \ /     \   /__    __/  \     \___|   Y  \/ __ \|  |  \     \___(  <_> )
 *  /_______  /__/\_ \|   __/|____/\____/|__||__| /____  >___/\  \     |__|      \______  /___|  (____  /__|   \______  /\____/
 *          \/      \/|__|                             \/      \_/                      \/     \/     \/              \/
 *
 *  ExploitsX by Sebastian Giheta, owner of 8b8t.xyz
 * .. _____________________ ..
 */

package me.bait.exploitfixer.chatco;

import me.bait.exploitfixer.exploitfixer;
import org.bukkit.ChatColor;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.AsyncPlayerChatEvent;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;


public class Spoilers implements Listener {
	exploitfixer plugin;
	String[] Spoiler = new String[5];


	public Spoilers(exploitfixer plugin) {
		this.plugin = plugin;

	}

	@EventHandler
	public void onPlayerChat(AsyncPlayerChatEvent event) {
		if (event.isCancelled())
			return;
		String check = event.getMessage();
		if (check.startsWith("[SPOILER]") && check.endsWith("[/SPOILER]")) {
			System.arraycopy(Spoiler, 0, Spoiler, 1, 4);
			int Length = event.getMessage().length();
			Player name = event.getPlayer();
			Spoiler[0] = "[ " + event.getMessage().substring(9, Length - 10) + " ] by R%)[".replace("R%)", ChatColor.RED.toString()) + name.getDisplayName() + "]";
			event.setMessage(ChatColor.BLACK + "SPOILER");
		} else {
			event.setMessage(check);
		}
	}

	@EventHandler
	public void onPlayerCommandPreprocess(PlayerCommandPreprocessEvent event) {
		Player player = event.getPlayer();
		String inputText = event.getMessage();
		if (inputText.startsWith("/show spoiler")) {
			int length = inputText.length();
			event.setCancelled(true);
			if (length > 14) {
				char parser = inputText.charAt(14);
				int numberOfPrints = Character.digit(parser, 15);
				if (numberOfPrints > 5 || numberOfPrints < 1) {
					player.sendMessage("The server only stores the last 5 spoilers to have been made.");
				} else if (numberOfPrints < 5 && numberOfPrints > 1) {
					for (int i = 0; i < numberOfPrints; i++)
						player.sendMessage("Spoiler [" + (i + 1) + "]: " + Spoiler[i]);
				}
			} else {
				player.sendMessage(Spoiler[0]);
			}
		}
	}
}