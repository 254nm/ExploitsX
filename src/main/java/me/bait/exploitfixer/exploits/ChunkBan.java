/*
 * .. _____________________ ..
 *  -- // WARNING \\ --
 *  -- THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
 *  -- THIS PROGRAM IS LICENSED FOR MODIFICATION TO AND ONLY TO: "BAITCORP LABS" [FR], "CCHOST PARIS" [FR].
 *  --
 *  -- ExploitsX Sebastian Giheta 2019-2020
 * .. _____________________ ..
 *
 * .. _____________________ ..
 *  ___________              .__         .__  __         ____  ___              _________ .__            __   _________
 *  \_   _____/__  _________ |  |   ____ |__|/  |_  _____\   \/  /     .__      \_   ___ \|  |__ _____ _/  |_ \_   ___ \  ____
 *   |    __)_\  \/  /\____ \|  |  /  _ \|  \   __\/  ___/\     /    __|  |___  /    \  \/|  |  \\__  \\   __\/    \  \/ /  _ \
 *   |        \>    < |  |_> >  |_(  <_> )  ||  |  \___ \ /     \   /__    __/  \     \___|   Y  \/ __ \|  |  \     \___(  <_> )
 *  /_______  /__/\_ \|   __/|____/\____/|__||__| /____  >___/\  \     |__|      \______  /___|  (____  /__|   \______  /\____/
 *          \/      \/|__|                             \/      \_/                      \/     \/     \/              \/
 *
 *  ExploitsX by Sebastian Giheta, owner of 8b8t.xyz
 * .. _____________________ ..
 */

package me.bait.exploitfixer.exploits;


import me.bait.exploitfixer.exploitfixer;
import me.bait.exploitfixer.util.API;
import me.bait.exploitfixer.util.CH;
import org.bukkit.ChatColor;
import org.bukkit.block.Block;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.hanging.HangingPlaceEvent;


public class ChunkBan implements Listener {

	@EventHandler
	public void hangingPlace(HangingPlaceEvent event) {
		if (exploitfixer.getPlugin().getConfig().getBoolean("patchchunkban") && (event.getBlock().getChunk().getEntities()).length > CH.getInt("ifentitymax", 600)) {
			event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', API.getPrefix() + CH.getString("chunkbanitemframemsg", "&aItem Frames are limited per chunk, sorry.")));
			event.setCancelled(true);
		}
	}

	@EventHandler
	public void onPlace(BlockPlaceEvent event) {
		if (exploitfixer.getPlugin().getConfig().getBoolean("patchchunkban")) {
			Block block = event.getBlock();
			Player player = event.getPlayer();
			if (API.isTile(block.getType().toString()) && (event.getBlock().getChunk().getTileEntities()).length > exploitfixer.getPlugin().getConfig().getInt("tileentitymax")) {
				event.setCancelled(true);
				player.sendMessage(ChatColor.translateAlternateColorCodes('&', exploitfixer.getPlugin().getConfig().getString("chunkbanmsg")));

			}
			int status = 0;
			String g = block.getType().toString();
			if (g.equals("SKULL") || g.equals("PLAYER_HEAD") || g.equals("CREEPER_HEAD") || g.equals("ZOMBIE_HEAD") || g.equals("WITHER_SKELETON_SKULL") || g.equals("SKELETON_SKULL") || g.equals("SKULL_ITEM"))
				status = 1;
			if (status == 1 && (block.getChunk().getTileEntities()).length > exploitfixer.getPlugin().getConfig().getInt("skullmax")) {
				event.setCancelled(true);
				player.sendMessage(ChatColor.translateAlternateColorCodes('&', exploitfixer.getPlugin().getConfig().getString("chunkbanmsg")));
			}
		}
	}
}