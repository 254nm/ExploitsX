/*
 * .. _____________________ ..
 *  -- // WARNING \\ --
 *  -- THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
 *  -- THIS PROGRAM IS LICENSED FOR MODIFICATION TO AND ONLY TO: "BAITCORP LABS" [FR], "CCHOST PARIS" [FR].
 *  --
 *  -- ExploitsX Sebastian Giheta 2019-2020
 * .. _____________________ ..
 *
 * .. _____________________ ..
 *  ___________              .__         .__  __         ____  ___              _________ .__            __   _________
 *  \_   _____/__  _________ |  |   ____ |__|/  |_  _____\   \/  /     .__      \_   ___ \|  |__ _____ _/  |_ \_   ___ \  ____
 *   |    __)_\  \/  /\____ \|  |  /  _ \|  \   __\/  ___/\     /    __|  |___  /    \  \/|  |  \\__  \\   __\/    \  \/ /  _ \
 *   |        \>    < |  |_> >  |_(  <_> )  ||  |  \___ \ /     \   /__    __/  \     \___|   Y  \/ __ \|  |  \     \___(  <_> )
 *  /_______  /__/\_ \|   __/|____/\____/|__||__| /____  >___/\  \     |__|      \______  /___|  (____  /__|   \______  /\____/
 *          \/      \/|__|                             \/      \_/                      \/     \/     \/              \/
 *
 *  ExploitsX by Sebastian Giheta, owner of 8b8t.xyz
 * .. _____________________ ..
 */

package me.bait.exploitfixer.exploits;

import me.bait.exploitfixer.exploitfixer;
import me.bait.exploitfixer.util.API;
import me.bait.exploitfixer.util.CH;
import me.bait.exploitfixer.util.ViolationUtils;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.player.PlayerInteractEntityEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.event.player.PlayerShearEntityEvent;
import org.bukkit.scheduler.BukkitRunnable;


public class Interaction implements Listener {
	static ViolationUtils interactMan = new ViolationUtils();
	static int intcancel = CH.getInt("interact-cancel");
	static int intkick = CH.getInt("interact-kick");
	static boolean eint = CH.getBoolean("interact-limit", true);

	public static void begin() {
		interactMan.begin(4);
		reload();
	}

	public static void reload() {
		intcancel = CH.getInt("interact-cancel");
		intkick = CH.getInt("interact-kick");
		eint = CH.getBoolean("interact-limit", true);
	}

	@EventHandler
	public void onInteract(PlayerInteractEntityEvent event) {
		if (interactMan.getVls(event.getPlayer()) >= intkick) {
			event.setCancelled(true);
		}
		pe(event.getPlayer());
	}

	@EventHandler
	public void onInteract(PlayerInteractEvent event) {
		if (!eint) return;
		if (interactMan.getVls(event.getPlayer()) >= intcancel) {
			if (event.getAction() == Action.RIGHT_CLICK_BLOCK && API.isTile(event.getClickedBlock().getType().toString())) {
				event.setCancelled(true);
				pe(event.getPlayer());
			}
		} else if ((int) Math.round(Math.random()) == 1) {
			pe(event.getPlayer());
		}
	}

	@EventHandler
	public void onLeave(PlayerQuitEvent event) {
		interactMan.resetVls(event.getPlayer());
	}

	@EventHandler
	public void onShear(PlayerShearEntityEvent event) {
		if (interactMan.getVls(event.getPlayer()) >= intkick) {
			event.setCancelled(true);
		}
		pe(event.getPlayer());
	}

	public void pe(final Player player) {
		interactMan.addVls(player, 1);
		interactMan.removeVL(player);
		(new BukkitRunnable() {
			public void run() {
				if (player.isOnline()) {
					if (Interaction.interactMan.vlMapContainsPlayer(player)) {
						if (Interaction.interactMan.getVls(player) > 1) {
							Interaction.interactMan.removeVL(player);
						}
						if (Interaction.interactMan.getVls(player) < 2) {
							Interaction.interactMan.resetVls(player);
						}
					}
				} else {
					Interaction.interactMan.resetVls(player);
				}
			}
		}).runTaskLater(exploitfixer.getPlugin(), 100L);
		if (interactMan.getVls(player) >= intkick) {
			API.kickPlayer(player, API.getPrefix() + " > &6You are interacting too fast, sorry ): (" + interactMan.getVls(player) + "vls)");
			API.alertMessage(API.getPrefix() + "&c " + player.getName() + "> &r&6Has been kicked for fastinteract (" + interactMan.getVls(player) + "vls)");
			interactMan.resetVls(player);
		}
	}
}