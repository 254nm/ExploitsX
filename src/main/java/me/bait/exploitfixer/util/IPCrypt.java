/*
 * .. _____________________ ..
 *  -- // WARNING \\ --
 *  -- THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
 *  -- THIS PROGRAM IS LICENSED FOR MODIFICATION TO AND ONLY TO: "BAITCORP LABS" [FR], "CCHOST PARIS" [FR].
 *  --
 *  -- ExploitsX Sebastian Giheta 2019-2020
 * .. _____________________ ..
 *
 * .. _____________________ ..
 *  ___________              .__         .__  __         ____  ___              _________ .__            __   _________
 *  \_   _____/__  _________ |  |   ____ |__|/  |_  _____\   \/  /     .__      \_   ___ \|  |__ _____ _/  |_ \_   ___ \  ____
 *   |    __)_\  \/  /\____ \|  |  /  _ \|  \   __\/  ___/\     /    __|  |___  /    \  \/|  |  \\__  \\   __\/    \  \/ /  _ \
 *   |        \>    < |  |_> >  |_(  <_> )  ||  |  \___ \ /     \   /__    __/  \     \___|   Y  \/ __ \|  |  \     \___(  <_> )
 *  /_______  /__/\_ \|   __/|____/\____/|__||__| /____  >___/\  \     |__|      \______  /___|  (____  /__|   \______  /\____/
 *          \/      \/|__|                             \/      \_/                      \/     \/     \/              \/
 *
 *  ExploitsX by Sebastian Giheta, owner of 8b8t.xyz
 * .. _____________________ ..
 */

package me.bait.exploitfixer.util;

import me.bait.exploitfixer.exploitfixer;
import org.bukkit.Bukkit;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.scheduler.BukkitRunnable;

import java.io.File;
import java.io.IOException;

public class IPCrypt {

	public static void quit(final Player p) {
		(new Thread(() -> (new BukkitRunnable() {

			public void run() {
				String uuid = p.getUniqueId().toString();
				if (exploitfixer.getPlugin().getConfig().getBoolean("debug")) {
					Bukkit.getLogger().info("ExploitsX is encrypting the IP of: " + p);
				}
				File dir = new File("plugins/Essentials/userdata/");
				if (dir.exists()) {
					File f = new File("plugins/Essentials/userdata/" + uuid + ".yml");
					if (f.exists()) {
						YamlConfiguration save = new YamlConfiguration();

						try {
							save.load(f);
						} catch (IOException | org.bukkit.configuration.InvalidConfigurationException er) {
							er.printStackTrace();

						}
						save.set("ipAddress", "127.0.0.1");

						try {
							save.save(f);
						} catch (IOException er) {
							er.printStackTrace();
						}
					}
				}
			}
		}).runTaskLater(exploitfixer.getPlugin(), 10L))).start();
	}
}