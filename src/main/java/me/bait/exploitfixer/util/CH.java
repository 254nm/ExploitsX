/*
 * .. _____________________ ..
 *  -- // WARNING \\ --
 *  -- THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
 *  -- THIS PROGRAM IS LICENSED FOR MODIFICATION TO AND ONLY TO: "BAITCORP LABS" [FR], "CCHOST PARIS" [FR].
 *  --
 *  -- ExploitsX Sebastian Giheta 2019-2020
 * .. _____________________ ..
 *
 * .. _____________________ ..
 *  ___________              .__         .__  __         ____  ___              _________ .__            __   _________
 *  \_   _____/__  _________ |  |   ____ |__|/  |_  _____\   \/  /     .__      \_   ___ \|  |__ _____ _/  |_ \_   ___ \  ____
 *   |    __)_\  \/  /\____ \|  |  /  _ \|  \   __\/  ___/\     /    __|  |___  /    \  \/|  |  \\__  \\   __\/    \  \/ /  _ \
 *   |        \>    < |  |_> >  |_(  <_> )  ||  |  \___ \ /     \   /__    __/  \     \___|   Y  \/ __ \|  |  \     \___(  <_> )
 *  /_______  /__/\_ \|   __/|____/\____/|__||__| /____  >___/\  \     |__|      \______  /___|  (____  /__|   \______  /\____/
 *          \/      \/|__|                             \/      \_/                      \/     \/     \/              \/
 *
 *  ExploitsX by Sebastian Giheta, owner of 8b8t.xyz
 * .. _____________________ ..
 */

package me.bait.exploitfixer.util;

import me.bait.exploitfixer.exploitfixer;
import org.bukkit.Bukkit;
import org.bukkit.configuration.file.YamlConfiguration;

import java.io.*;
import java.util.ArrayList;
import java.util.List;


public class CH {
	static File c = new File("plugins/ExploitsX/config.yml");
	static File l = new File("plugins/ExploitsX/lists.yml");
	static YamlConfiguration cgold = YamlConfiguration.loadConfiguration(new InputStreamReader(exploitfixer.getPlugin().getResource("config.yml")));
	static YamlConfiguration lgold = YamlConfiguration.loadConfiguration(new InputStreamReader(exploitfixer.getPlugin().getResource("lists.yml")));

	private static void copy(InputStream in, File file) {
		try {
			OutputStream out = new FileOutputStream(file);
			byte[] buf = new byte[1024];
			int len;
			while ((len = in.read(buf)) > 0)
				out.write(buf, 0, len);
			out.close();
			in.close();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static void enable() {
		exploitfixer.getPlugin().saveDefaultConfig();
		if (!l.exists()) {
			copy(exploitfixer.getPlugin().getResource("lists.yml"), l);
		}
	}

	public static boolean getBoolean(String val) {
		String type = "Boolean";
		YamlConfiguration cy = YamlConfiguration.loadConfiguration(c);
		YamlConfiguration ly = YamlConfiguration.loadConfiguration(l);
		if (val == null)
			return false;
		if (cy.contains(val))
			return cy.getBoolean(val);
		if (ly.contains(val)) {
			return ly.getBoolean(val);
		}
		Bukkit.getLogger().warning("ExploitsX encountered an error looking for config value '" + val + "' of type '" + type + "'. Please resolve this or you will definitely run into problems!");
		if (cgold.contains(val))
			return cgold.getBoolean(val);
		if (lgold.contains(val)) {
			return lgold.getBoolean(val);
		}
		Bukkit.getLogger().warning("ExploitsX encountered an error (no default found!) considering value '" + val + "' of type '" + type + "'. Please contact an ExploitsX dev ASAP!");
		return false;
	}


	public static boolean getBoolean(String val, Boolean e) {
		String type = "Boolean";
		YamlConfiguration cy = YamlConfiguration.loadConfiguration(c);
		YamlConfiguration ly = YamlConfiguration.loadConfiguration(l);
		if (val == null || e == null) return e.booleanValue();
		if (cy.contains(val))
			return cy.getBoolean(val);
		if (ly.contains(val)) {
			return ly.getBoolean(val);
		}
		Bukkit.getLogger().warning("ExploitsX couldn't find config value '" + val + "' of type '" + type + "'. Please update your config or contact an ExploitsX dev!");
		return e.booleanValue();
	}


	public static double getDouble(String val) {
		String type = "Double";
		YamlConfiguration cy = YamlConfiguration.loadConfiguration(c);
		YamlConfiguration ly = YamlConfiguration.loadConfiguration(l);
		if (val == null)
			return 0.0D;
		if (cy.contains(val))
			return cy.getDouble(val);
		if (ly.contains(val)) {
			return ly.getDouble(val);
		}
		Bukkit.getLogger().warning("ExploitsX encountered an error looking for config value '" + val +
				"' of type '" + type + "'. Please resolve this or you will definitely run into problems!");
		if (cgold.contains(val))
			return cgold.getDouble(val);
		if (lgold.contains(val)) {
			return lgold.getDouble(val);
		}
		Bukkit.getLogger().warning("ExploitsX encountered an error (no default found!) considering value '" + val + "' of type '" + type + "'. Please contact an ExploitsX dev ASAP!");
		return 0.0D;
	}


	public static double getDouble(String val, double e) {
		String type = "Double";
		YamlConfiguration cy = YamlConfiguration.loadConfiguration(c);
		YamlConfiguration ly = YamlConfiguration.loadConfiguration(l);
		if (val == null)
			return e;
		if (cy.contains(val))
			return cy.getDouble(val);
		if (ly.contains(val)) {
			return ly.getDouble(val);
		}
		Bukkit.getLogger().warning("ExploitsX couldn't find config value '" + val + "' of type '" + type + "'. Please update your config or contact an ExploitsX dev!");
		return e;
	}


	public static int getInt(String val) {
		String type = "int";
		YamlConfiguration cy = YamlConfiguration.loadConfiguration(c);
		YamlConfiguration ly = YamlConfiguration.loadConfiguration(l);
		if (val == null)
			return 0;
		if (cy.contains(val))
			return cy.getInt(val);
		if (ly.contains(val)) {
			return ly.getInt(val);
		}
		Bukkit.getLogger().warning("ExploitsX encountered an error looking for config value '" + val + "' of type '" + type + "'. Please resolve this or you will definitely run into problems!");
		if (cgold.contains(val))
			return cgold.getInt(val);
		if (lgold.contains(val)) {
			return lgold.getInt(val);
		}
		Bukkit.getLogger().warning("ExploitsX encountered an error (no default found!) considering value '" + val + "' of type '" + type + "'. Please contact an ExploitsX dev ASAP!");
		return 0;
	}

	public static int getInt(String val, int e) {
		String type = "int";
		YamlConfiguration cy = YamlConfiguration.loadConfiguration(c);
		YamlConfiguration ly = YamlConfiguration.loadConfiguration(l);
		if (val == null)
			return e;
		if (cy.contains(val))
			return cy.getInt(val);
		if (ly.contains(val)) {
			return ly.getInt(val);
		}
		Bukkit.getLogger().warning("ExploitsX couldn't find config value '" + val + "' of type '" + type + "'. Please update your config or contact an ExploitsX dev! A default value has been used.");
		return e;
	}

	public static String getString(String val) {
		String type = "String";
		YamlConfiguration cy = YamlConfiguration.loadConfiguration(c);
		YamlConfiguration ly = YamlConfiguration.loadConfiguration(l);
		if (val == null)
			return "";
		if (cy.contains(val))
			return cy.getString(val);
		if (ly.contains(val)) {
			return ly.getString(val);
		}
		Bukkit.getLogger().warning("ExploitsX encountered an error looking for config value '" + val + "' of type '" + type + "'. Please resolve this or you will definitely run into problems!");
		if (cgold.contains(val))
			return cgold.getString(val);
		if (lgold.contains(val)) {
			return lgold.getString(val);
		}
		Bukkit.getLogger().warning("ExploitsX encountered an error (no default found!) considering value '" + val + "' of type '" + type + "'. Please contact an ExploitsX dev ASAP!");
		return "";
	}


	public static String getString(String val, String e) {
		String type = "String";
		YamlConfiguration cy = YamlConfiguration.loadConfiguration(c);
		YamlConfiguration ly = YamlConfiguration.loadConfiguration(l);
		if (val == null || e == null)
			return e;
		if (cy.contains(val))
			return cy.getString(val);
		if (ly.contains(val)) {
			return ly.getString(val);
		}
		Bukkit.getLogger().warning("ExploitsX couldn't find config value '" + val + "' of type '" + type + "'. Please update your config or contact an ExploitsX dev! A default value has been used.");
		return e;
	}


	public static List<String> getStringList(String val) {
		String type = "StringList";
		List<String> list = new ArrayList<>();
		list.add("");
		YamlConfiguration cy = YamlConfiguration.loadConfiguration(c);
		YamlConfiguration ly = YamlConfiguration.loadConfiguration(l);
		if (val == null)
			return list;
		if (cy.contains(val))
			return cy.getStringList(val);
		if (ly.contains(val)) {
			return ly.getStringList(val);
		}
		Bukkit.getLogger().warning("ExploitsX encountered an error looking for config value '" + val +
				"' of type '" + type + "'. Please resolve this or you will definitely run into problems!");
		if (cgold.contains(val))
			return cgold.getStringList(val);
		if (lgold.contains(val)) {
			return lgold.getStringList(val);
		}
		Bukkit.getLogger().warning("ExploitsX encountered an error (no default found!) considering value '" + val + "' of type '" + type + "'. Please contact an ExploitsX dev ASAP!");
		return list;
	}

	public static List<String> getStringList(String val, List<String> e) {
		String type = "Stringlist";
		YamlConfiguration cy = YamlConfiguration.loadConfiguration(c);
		YamlConfiguration ly = YamlConfiguration.loadConfiguration(l);
		if (val == null || e == null)
			return e;
		if (cy.contains(val))
			return cy.getStringList(val);
		if (ly.contains(val)) {
			return ly.getStringList(val);
		}
		Bukkit.getLogger().warning("ExploitsX couldn't find config value '" + val + "' of type '" + type + "'. Please update your config or contact an ExploitsX dev! A default value has been used.");
		return e;
	}
}