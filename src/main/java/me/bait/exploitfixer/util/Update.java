/*
 * .. _____________________ ..
 *  -- // WARNING \\ --
 *  -- THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
 *  -- THIS PROGRAM IS LICENSED FOR MODIFICATION TO AND ONLY TO: "BAITCORP LABS" [FR], "CCHOST PARIS" [FR].
 *  --
 *  -- ExploitsX Sebastian Giheta 2019-2020
 * .. _____________________ ..
 *
 * .. _____________________ ..
 *  ___________              .__         .__  __         ____  ___              _________ .__            __   _________
 *  \_   _____/__  _________ |  |   ____ |__|/  |_  _____\   \/  /     .__      \_   ___ \|  |__ _____ _/  |_ \_   ___ \  ____
 *   |    __)_\  \/  /\____ \|  |  /  _ \|  \   __\/  ___/\     /    __|  |___  /    \  \/|  |  \\__  \\   __\/    \  \/ /  _ \
 *   |        \>    < |  |_> >  |_(  <_> )  ||  |  \___ \ /     \   /__    __/  \     \___|   Y  \/ __ \|  |  \     \___(  <_> )
 *  /_______  /__/\_ \|   __/|____/\____/|__||__| /____  >___/\  \     |__|      \______  /___|  (____  /__|   \______  /\____/
 *          \/      \/|__|                             \/      \_/                      \/     \/     \/              \/
 *
 *  ExploitsX by Sebastian Giheta, owner of 8b8t.xyz
 * .. _____________________ ..
 */

package me.bait.exploitfixer.util;

import me.bait.exploitfixer.exploitfixer;
import org.bukkit.Server;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;

import java.io.*;

public class Update {
	public static File NewConfig;
	public static File NewLists;
	public static File dataFolder;


	public static void checkUpdates() {
		dataFolder = exploitfixer.getPlugin().getDataFolder();
		Server server = exploitfixer.getPlugin().getServer();
		FileConfiguration config = exploitfixer.getPlugin().getConfig();
		YamlConfiguration cfgold = YamlConfiguration.loadConfiguration(new InputStreamReader(exploitfixer.getPlugin().getResource("config.yml")));
		YamlConfiguration cfyml = YamlConfiguration.loadConfiguration(new InputStreamReader(exploitfixer.getPlugin().getResource("lists.yml")));
		NewLists = new File(dataFolder, "listsupdate.txt");
		if (CH.getInt("listsymlversion", 0) < cfyml.getInt("listsymlversion")) {
			server.getLogger().warning("ExploitsX > Lists file out of date. Please look at the new lists file (listsipdate.yml) and compare the variables to see what's missing in order to fix it. Change the last line in the config 'version' to the new version described in listsupdate.yml to disable this message.");
			NewLists.getParentFile().mkdirs();
			copy(exploitfixer.getPlugin().getResource("lists.yml"), NewLists);
		} else if (CH.getInt("listsymlversion") > cfyml.getInt("listsymlversion")) {
			server.getLogger().warning("ExploitsX > Future Lists file found. Are you a time traveller? I hope not... I created listsupdate.yml so you can see if you're missing anything this version needs.");
			NewLists.getParentFile().mkdirs();
			copy(exploitfixer.getPlugin().getResource("lists.yml"), NewLists);
		} else {
			File cl2 = new File("plugins/ExploitsX/listsupdate.txt");
			if (cl2.exists())
				cl2.delete();
			if (CH.getInt("logging-level") > 0)
				API.println(API.getPrefix() + "lists.yml is up to date");
		}
		NewConfig = new File(dataFolder, "configupdate.txt");
		if (config.getInt("confversion") < cfgold.getInt("confversion")) {
			server.getLogger().warning("ExploitsX > Config out of date. Please look at the new config file and compare the variables to see what's missing in order to fix it. Change the last line in the config to the new version described in configupdate.yml to disable this message.");
			NewConfig.getParentFile().mkdirs();
			copy(exploitfixer.getPlugin().getResource("config.yml"), NewConfig);
		} else if (config.getInt("confversion") > cfgold.getInt("confversion")) {
			server.getLogger().warning("ExploitsX > Future config found. Are you a time traveller? I hope not... I created configupdate.yml so you can see if you're missing anything this version needs.");
			NewConfig.getParentFile().mkdirs();
			copy(exploitfixer.getPlugin().getResource("config.yml"), NewConfig);
		} else {
			File cl2 = new File("plugins/ExploitsX/configupdate.txt");
			if (cl2.exists())
				cl2.delete();
			if (CH.getInt("logging-level") > 0)
				API.println(API.getPrefix() + "config.yml is up to date");
		}
	}

	private static void copy(InputStream in, File file) {
		try {
			OutputStream out = new FileOutputStream(file);
			byte[] buf = new byte[1024];
			int len;
			while ((len = in.read(buf)) > 0)
				out.write(buf, 0, len);
			out.close();
			in.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}